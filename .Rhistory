library(RCurl)
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
setInternet2(TRUE)
setInternet2()
download.file(url="https://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
download.file(url="http://curl.haxx.se/ca/cacert.pem",
destfile="cacert.pem")
setInternet2(use=FALSE)
download.file(url="http://curl.haxx.se/ca/cacert.pem",
destfile="cacert.pem")
# twitter
library(twitteR)
library(base64enc)
library(curl)
# connection setup
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
download.file(url="https://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
# twitter
library(twitteR)
library(base64enc)
library(curl)
# connection setup
download.file(url="https://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
#to get your consumerKey and consumerSecret see the twitteR documentation for instructions
consumer_key <- '	xUFuBcvfLap0IKewRRfADzmda'
consumer_secret <- '7cgHEquy2N6PTwMDUYNRlOtcfcLJC32GsuC6NXiQ2tfZvrcorq'
access_token <- '2809718062-0hpNwmvT5AKSg5bOT8q1FxWi71OXmol2IbfsloE'
access_secret <- 'LnkbCXGkjaYt56hiathlZN8NkluBajWkLOAzFzONFtWqE'
setup_twitter_oauth(consumer_key,
consumer_secret,
access_token,
access_secret)
# twitter
library(twitteR)
library(base64enc)
library(curl)
# connection setup
download.file(url="https://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
#to get your consumerKey and consumerSecret see the twitteR documentation for instructions
consumer_key <- '	xUFuBcvfLap0IKewRRfADzmda'
consumer_secret <- '7cgHEquy2N6PTwMDUYNRlOtcfcLJC32GsuC6NXiQ2tfZvrcorq'
access_token <- '2809718062-0hpNwmvT5AKSg5bOT8q1FxWi71OXmol2IbfsloE'
access_secret <- 'LnkbCXGkjaYt56hiathlZN8NkluBajWkLOAzFzONFtWqE'
setup_twitter_oauth(consumer_key,
consumer_secret
)
# twitter
library(twitteR)
library(base64enc)
library(curl)
# connection setup
download.file(url="https://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
#to get your consumerKey and consumerSecret see the twitteR documentation for instructions
consumer_key <- '	xUFuBcvfLap0IKewRRfADzmda'
consumer_secret <- '7cgHEquy2N6PTwMDUYNRlOtcfcLJC32GsuC6NXiQ2tfZvrcorq'
access_token <- '2809718062-0hpNwmvT5AKSg5bOT8q1FxWi71OXmol2IbfsloE'
access_secret <- 'LnkbCXGkjaYt56hiathlZN8NkluBajWkLOAzFzONFtWqE'
setup_twitter_oauth(consumer_key,
consumer_secret,
access_token,
access_secret)
library(twitteR)
library(ROAuth)
library(RCurl)
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
twitCred <- OAuthFactory$new(consumerKey=consumer_key,
consumerSecret=consumer_secret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
twitCred <- getTwitterOAuth(consumer_key= consumerKey, consumer_secret=consumerSecret)
consumer_key <- '	xUFuBcvfLap0IKewRRfADzmda'
consumer_secret <- '7cgHEquy2N6PTwMDUYNRlOtcfcLJC32GsuC6NXiQ2tfZvrcorq'
access_token <- '2809718062-0hpNwmvT5AKSg5bOT8q1FxWi71OXmol2IbfsloE'
access_secret <- 'LnkbCXGkjaYt56hiathlZN8NkluBajWkLOAzFzONFtWqE'
setup_twitter_oauth(consumer_key,
consumer_secret,
access_token,
access_secret)
setup_twitter_oauth(consumer_key,
consumer_secret,
access_token,
access_secret)
devtools::install_version("httr", version="0.6.0", repos="http://cran.us.r-project.org")
install.packages("devtools")
devtools::install_version("httr", version="0.6.0", repos="http://cran.us.r-project.org")
devtools::install_version("httr", version="0.6.0", repos="http://cran.us.r-project.org")
devtools::install_version("httr", version="0.6.0", repos="http://cran.us.r-project.org")
devtools::install_version("httr", version="0.6.0", repos="http://cran.us.r-project.org")
install.packages('Rtools')
devtools::install_version("httr", version="0.6.0", repos="http://cran.us.r-project.org")
library('Rtools')
install.packages('Rtools')
# Set constant requestURL
requestURL <- "https://api.twitter.com/oauth/request_token"
# Set constant accessURL
accessURL <- "https://api.twitter.com/oauth/access_token"
# Set constant authURL
authURL <- "https://api.twitter.com/oauth/authorize"
twitCred$handshake(cainfo="cacert.pem")
twitCred <- OAuthFactory$new(consumerKey=consumer_key,
consumerSecret=consumer_secret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake(cainfo="cacert.pem")
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
twitCred <- OAuthFactory$new(consumerKey=consumer_key,
consumerSecret=consumer_secret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred
twitCred <- getTwitterOAuth(consumer_key= consumerKey, consumer_secret=consumerSecret)
# twitter
library(twitteR)
library(base64enc)
library(curl)
# connection setup
download.file(url="https://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
consumer_key <- '	xUFuBcvfLap0IKewRRfADzmda'
consumer_secret <- '7cgHEquy2N6PTwMDUYNRlOtcfcLJC32GsuC6NXiQ2tfZvrcorq'
access_token <- '2809718062-0hpNwmvT5AKSg5bOT8q1FxWi71OXmol2IbfsloE'
access_secret <- 'LnkbCXGkjaYt56hiathlZN8NkluBajWkLOAzFzONFtWqE'
setup_twitter_oauth(consumer_key,
consumer_secret,
access_token,
access_secret)
# twitter
library(twitteR)
library(base64enc)
library(curl)
# connection setup
download.file(url="https://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
#to get your consumerKey and consumerSecret see the twitteR documentation for instructions
# 2809718062-
consumer_key <- '	xUFuBcvfLap0IKewRRfADzmda'
consumer_secret <- '7cgHEquy2N6PTwMDUYNRlOtcfcLJC32GsuC6NXiQ2tfZvrcorq'
access_token <- '0hpNwmvT5AKSg5bOT8q1FxWi71OXmol2IbfsloE'
access_secret <- 'LnkbCXGkjaYt56hiathlZN8NkluBajWkLOAzFzONFtWqE'
setup_twitter_oauth(consumer_key,
consumer_secret,
access_token,
access_secret)
# twitter
library(twitteR)
library(base64enc)
library(curl)
# connection setup
download.file(url="https://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
#to get your consumerKey and consumerSecret see the twitteR documentation for instructions
# 2809718062-
consumer_key <- '	xUFuBcvfLap0IKewRRfADzmda'
consumer_secret <- '7cgHEquy2N6PTwMDUYNRlOtcfcLJC32GsuC6NXiQ2tfZvrcorq'
access_token <- '2809718062-0hpNwmvT5AKSg5bOT8q1FxWi71OXmol2IbfsloE'
access_secret <- 'LnkbCXGkjaYt56hiathlZN8NkluBajWkLOAzFzONFtWqE'
setup_twitter_oauth(consumer_key,
consumer_secret,
access_token,
access_secret)
# twitter
library(twitteR)
library(base64enc)
library(curl)
# connection setup
download.file(url="https://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
#to get your consumerKey and consumerSecret see the twitteR documentation for instructions
# 2809718062-
consumer_key <- '	xUFuBcvfLap0IKewRRfADzmda'
consumer_secret <- '7cgHEquy2N6PTwMDUYNRlOtcfcLJC32GsuC6NXiQ2tfZvrcorq'
access_token <- '2809718062-0hpNwmvT5AKSg5bOT8q1FxWi71OXmol2IbfsloE'
access_secret <- 'LnkbCXGkjaYt56hiathlZN8NkluBajWkLOAzFzONFtWqE'
setup_twitter_oauth(consumer_key,
consumer_secret,
access_token,
access_secret)
consumer_key <- 'xUFuBcvfLap0IKewRRfADzmda'
consumer_secret <- '7cgHEquy2N6PTwMDUYNRlOtcfcLJC32GsuC6NXiQ2tfZvrcorq'
access_token <- '2809718062-0hpNwmvT5AKSg5bOT8q1FxWi71OXmol2IbfsloE'
access_secret <- 'LnkbCXGkjaYt56hiathlZN8NkluBajWkLOAzFzONFtWqE'
setup_twitter_oauth(consumer_key,
consumer_secret,
access_token,
access_secret)
tweets <- userTimeline("WHO", n = 3200)
tweets
# twitter
library(twitteR)
library(base64enc)
library(curl)
# connection setup
download.file(url="https://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
#to get your consumerKey and consumerSecret see the twitteR documentation for instructions
# 2809718062-
consumer_key <- 'xUFuBcvfLap0IKewRRfADzmda'
consumer_secret <- '7cgHEquy2N6PTwMDUYNRlOtcfcLJC32GsuC6NXiQ2tfZvrcorq'
access_token <- '2809718062-0hpNwmvT5AKSg5bOT8q1FxWi71OXmol2IbfsloE'
access_secret <- 'LnkbCXGkjaYt56hiathlZN8NkluBajWkLOAzFzONFtWqE'
setup_twitter_oauth(consumer_key,
consumer_secret,
access_token,
access_secret)
myUser <- getUser("davidnabarro", cainfo="cacert.pem")
myUser
myUser <- getUser("davidnabarro")
myUser
friendships(user_ids = "davidnabarro")
friendships()
myUser$getId()
myUser$getFollowerIDs()
myUser$getFolloweDIDs()
myUser$getFollowedIDs()
myUser$getFriendIDs()
myUser$getFollowers()
myUser$getFriends()
friends <- myUser$getFriends()
as.character(friends
)
as.character(friends)
unlist(friends)
is.list(friends)
lapply(friends, function(x) {x[1]})
friends[1]
friends[[1]]
lapply(friends, function(x) {x[[1]]})
lapply(friends, function(friends) {friends[[1]]})
lapply(friends, function(friends) {friends[1]})
unique(rapply(friends, function(x) head(x, 1)))
friends[1]
unique(rapply(friends, function(x) x[1])))
unique(rapply(friends, function(x) x[1]))
unique(rapply(friends, function(x) unlist(x)))
unique(rapply(friends, function(x) unlist(x)[1]))
unique(rapply(friends, function(x) unlist(x)))
unique(rapply(friends, function(x) as.character(unlist(x)))
)
unique(rapply(friends, function(x) as.character(unlist(x))))
as.character(unique(rapply(friends, function(x) unlist(x)))
)
as.character(unique(rapply(friends, function(x) unlist(x))))
unique(rapply(friends, function(x) as.character(unlist(x))))
unique(rapply(friends, function(x) unlist(x)))
unlist(unique(rapply(friends, function(x) unlist(x)))
)
unlist(unique(rapply(friends, function(x) unlist(x))))
unlist(unique(rapply(friends, function(x) unlist(x))))
rapply(friends, function(x) unlist(x))
unlist(unique(rapply(friends, function(x) unlist(x))))
unique(friends)
unique(friends)
as.character(unique(friends)
)
list(unique(friends)
)
list(unique(friends))
unlist(list(unique(friends))
)
as.character(unlist(list(unique(friends))
)
)
lapply(unique(friends), '[[', 1)
lapply(friends, '[[', 1)
sapply(friends, '[[', 3)
sapply(friends, '[[', 1)
sapply(friends, '[', 1)
friends
sapply(unique(friends), '[', 1)
list(unique(friends))
sapply(list(unique(friends)), '[', 1)
sapply(list(unique(friends)), '[[', 1)
sapply(list(unique(friends)), '[[[', 1)
sapply(list(unique(friends)), '[[', 1)
sapply(list(unique(friends)), '[[', 2)
sapply(list(unique(friends)), '[[]][[]][', 2)
sapply(list(unique(friends)), '[[]][[]][1]', 2)
sapply(list(unique(friends)), '[1]', 2)
sapply(list(unique(friends)), '[', 2)
sapply(list(unique(friends)), '[', 1)
as.character(sapply(list(unique(friends)), '[', 1)
)
as.character(sapply(list(unique(friends)), '[', 1))
sapply(list(unique(friends)), '[', 1)
sapply(list(unique(friends)), '[', 1)[1]
sapply(list(unique(friends)), '[', 1)[[1]]
# twitter
library(twitteR)
library(base64enc)
library(curl)
# connection setup
download.file(url="https://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
#to get your consumerKey and consumerSecret see the twitteR documentation for instructions
# 2809718062-
consumer_key <- 'xUFuBcvfLap0IKewRRfADzmda'
consumer_secret <- '7cgHEquy2N6PTwMDUYNRlOtcfcLJC32GsuC6NXiQ2tfZvrcorq'
access_token <- '2809718062-0hpNwmvT5AKSg5bOT8q1FxWi71OXmol2IbfsloE'
access_secret <- 'LnkbCXGkjaYt56hiathlZN8NkluBajWkLOAzFzONFtWqE'
setup_twitter_oauth(consumer_key,
consumer_secret,
access_token,
access_secret)
candidates <- c("davidnabarro", "sanianishtar", "FlaviaBustreo", "DrTedros", "pdousteblazy")
myUser <- getUser("davidnabarro")
friendIDs   <- myUser$getFriendIDs()
friends     <- myUser$getFriends
friends
friendIDs
friends     <- myUser$getFriends()
friends
length(friends)
j <- 1
sapply(list(unique(friends)), '[', j)[[1]]
sapply(list(unique(friends)), '[', j)[[1]]
sapply(list(unique(friendIDs)), '[', j)[[1]]
cbind(sapply(list(unique(friends)), '[', j)[[1]], sapply(list(unique(friendIDs)), '[', j)[[1]])
sapply(list(unique(friends)), '[', j)[[1]]
cbind(as.character(sapply(list(unique(friends)), '[', j)[[1]]), sapply(list(unique(friendIDs)), '[', j)[[1]])
as.character(sapply(list(unique(friends)), '[', j)[[1]])
cbind(sapply(list(unique(friends)), '[', j)[[1]], sapply(list(unique(friendIDs)), '[', j)[[1]])
c(sapply(list(unique(friends)), '[', j)[[1]], sapply(list(unique(friendIDs)), '[', j)[[1]])
sapply(list(unique(friends)), '[', j)[[1]]
unlist(c(sapply(list(unique(friends)), '[', j)[[1]], sapply(list(unique(friendIDs)), '[', j)[[1]]))
sapply(list(unique(friends)), '[', j)[[1]]
as.character(sapply(list(unique(friends)), '[', j)[[1]])
sapply(list(unique(friends)), '[', j)[[1]]
unlist(sapply(list(unique(friends)), '[', j)[[1]])
as.character(unlist(sapply(list(unique(friends)), '[', j)[[1]])
)
as.character(unlist(sapply(list(unique(friends)), '[', j)[[1]]))
do.call("rbind", lapply(sapply(list(unique(friends)), '[', j)[[1]], as.character))
c(sapply(list(unique(friends)), '[', j)[[1]], sapply(list(unique(friends)), '[', j)[[1]]
)
sapply(list(unique(friendIDs)), '[', j)[[1]]
c(sapply(list(unique(friendIDs)), '[', j)[[1]], sapply(list(unique(friendIDs)), '[', j)[[1]])
cbind(sapply(list(unique(friendIDs)), '[', j)[[1]])
sapply(list(unique(friends)), '[', j)[[1]]
as.factor(sapply(list(unique(friends)), '[', j)[[1]]
)
unique(sapply(list(unique(friends)), '[', j)[[1]])
sapply(list(unique(friends)), '[', j, USE.NAMES = FALSE)[[1]]
as.character(sapply(list(unique(friends)), '[', j, USE.NAMES = FALSE)[[1]]
)
as.character(sapply(list(unique(friends)), '[', j, USE.NAMES = T)[[1]]
)
apply(list(unique(friends)), '[', j)[[1]]
j
sapply(list(unique(friends)), '[', j)[[1]]
sapply(list(unique(friends)), '[', j)
sapply(list(unique(friends)), '[', j)[[1]][1]
sapply(list(unique(friends)), '[', j)[[1]]
as.data.frame(sapply(list(unique(friends)), '[', j)[[1]])
as.data.frame(sapply(list(unique(friends)), '[', j)[[1]])$name
as.character(as.data.frame(sapply(list(unique(friends)), '[', j)[[1]])$name
)
as.data.frame(sapply(list(unique(friends)), '[', j)[[1]])$screenName
ideigl      <- as.data.frame(NULL)
for(j in 1:length(friends))
{
# loop this
ideigil <- as.data.frame(rbind(ideigl, as.data.frame(sapply(list(unique(friends)), '[', j)[[1]])$screenName))
}
ideigl      <- as.data.frame(NULL)
for(j in 1:length(friends))
{
# loop this
ideigl <- as.data.frame(rbind(ideigl, as.data.frame(sapply(list(unique(friends)), '[', j)[[1]])$screenName))
}
ideigl
as.data.frame(sapply(list(unique(friends)), '[', j)[[1]]))
as.data.frame(sapply(list(unique(friends)), '[', j)[[1]])
ideigl      <- as.data.frame(NULL)
for(j in 1:length(friends))
{
# loop this
ideigl <- as.data.frame(rbind(ideigl, as.data.frame(sapply(list(unique(friends)), '[', j)[[1]])))
}
ideigl
length(followers)
followers   <- myUser$getFollowers()
followers
length(followers)
ideigl2 <- as.data.frame(NULL)
as.data.frame(rbind(ideigl2, as.data.frame(sapply(list(unique(followers)), '[', j)[[1]])))
Sys.time()
today()
as.Date(Sys.time())
paste0(i, "_friends_", as.Date(Sys.time()), ".csv")
i <- "davidnabarro
""
""
i <- "davidnabarro"
paste0(i, "_friends_", as.Date(Sys.time()), ".csv")
write.table(ideigl, paste0(i, "_friends_", as.Date(Sys.time()), ".txt"), sep="/t")
getwd()
write.table(ideigl, paste0(i, "_friends_", as.Date(Sys.time()), ".txt"), sep="\t")
myUser$location
myUser$getLastStatus()
myUser$getStatusesCount()
myUser$statuses
myUser$lastStatus
myUser$getCreated()
searchTwitter("@davidnabarro")
install.packages(RODBC)
install.packages('RODBC')
testdb <- file.path("atc.accdb")
library(RODBC)
testdb <- file.path("atc.accdb")
channel <- odbcConnectAccess2007(testdb)
setwd('c:/gergo/fp7')
adat1 <- read.csv('cordis-fp7projects.csv', header=T, sep=";", dec=",")#[,c(1:5, 17:20)]
# van a projektben lengyel vagy magyar partner
adat1 <- adat1[unique(c(which(adat1$coordinatorCountry %in% c("PL", "HU")), grep(c("PL|HU"), adat1$participantCountries))),]
# EÜ kutprogrammból való projekt
adat1 <- adat1[adat1$programme == "FP7-HEALTH",]
adat1$participantCountries <- as.character(adat1$participantCountries)
adat1$coordinatorCountry <- as.character(adat1$coordinatorCountry)
adat2 <- read.csv('cordis-h2020projects.csv', header=T, sep=";", dec=",")
# van a projektben legyel / magyar partner
adat2 <- adat2[unique(c(which(adat2$coordinatorCountry %in% c("PL", "HU")), grep("PL|HU", adat2$participantCountries))),]
# egészségügyi célú kiírás
adat2 <- adat2[grep(c("H2020-EU.3.1."), adat2$programme),]
# ez az elsődleges elemzési adatbázis
adat <- rbind(adat1, adat2)
rm(list = c('adat1','adat2'))
proj_countries <- lapply(strsplit(paste0(adat$coordinatorCountry,";",adat$participantCountries), ";"), unique)
collect_edges <- NULL
for(i in 1:length(proj_countries))
{
collect_edges <- rbind(collect_edges, expand.grid(proj_countries[i][[1]], proj_countries[i][[1]]))
}
collect_edges      <- collect_edges[-which(as.character(collect_edges[,1]) == as.character(collect_edges[,2])),]
collect_edges.sort <- t(apply(collect_edges, 1, sort))
collect_edges      <- collect_edges[!duplicated(collect_edges.sort),]
collect_nodes <- unique(c(as.character(collect_edges[,1]), as.character(collect_edges[,2])))
colnames(adat)
head(adat)
fp7_org <- read.csv('cordis-fp7organizations.csv', header=T, sep=";", dec=",")
which(adat$reference %in% fp7_org$projectReference)
which(fp7_org$projectReference %in% adat$reference)
fp7_org <- fp7_org[which(fp7_org$projectReference %in% adat$reference),]
#
levels(fp7_org$projectReference
)
unique(fp7_org$projectReference)
length(unique(fp7_org$projectReference))
h2020_org <- read.csv('cordis-h2020organizations.csv', header=T, sep=";", dec=",")
head(v)
head(h2020_org)
which(h2020_org$projectReference %in% adat$reference)
head(adat)
which(h2020_org$projectReference %in% adat$reference[adat$programme!="FP7-HEALTH"])
h2020_org <- h2020_org[which(h2020_org$projectReference %in% adat$reference[adat$programme!="FP7-HEALTH"]),]
length(unique(fp7_org$projectReference))
length(unique(h2020_org$projectReference))
177+56
collect_nodes
collect_edges
length(collect_edges)
nrow(collect_edges)
nrow(unique(collect_edges)
)
head(fp7_org)
aggregate(fp7_org$ecContribution ~ fp7_org$country, data=adat, FUN=sum)
aggregate(h2020_org$ecContribution ~ h2020_org$country, data=adat, FUN=sum)
cbind(aggregate(fp7_org$ecContribution ~ fp7_org$country, data=adat, FUN=sum),
aggregate(h2020_org$ecContribution ~ h2020_org$country, data=adat, FUN=sum))
rbind(aggregate(fp7_org$ecContribution ~ fp7_org$country, data=adat, FUN=sum),
aggregate(h2020_org$ecContribution ~ h2020_org$country, data=adat, FUN=sum))
colnames(fp7_ecbycountry) <- c('country', 'ecContrib')
colnames(h2020_ecbycountry) <- c('country', 'ecContrib')
fp7_ecbycountry <- aggregate(fp7_org$ecContribution ~ fp7_org$country, data=adat, FUN=sum)
h2020_ecbycountry <- aggregate(h2020_org$ecContribution ~ h2020_org$country, data=adat, FUN=sum)
rm(list = c('fp7_org','h2020_org'))
colnames(fp7_ecbycountry) <- c('country', 'ecContrib')
colnames(h2020_ecbycountry) <- c('country', 'ecContrib')
ecbycountry <- rbind(fp7_ecbycountry, h2020_ecbycountry)
ecbycountry <- aggregate(ecbycountry$ecContrib, ecbycountry$country, data=ecbycountry, FUN=sum)
ecbycountry <- aggregate(ecbycountry$ecContrib ~ ecbycountry$country, data=ecbycountry, FUN=sum)
ecbycountry
33391764.7-31450767.2
colnames(ecbycountry) <- c('country', 'ecContrib')
nrow(collect_nodes)
length(collect_nodes)
collect_nodes
as.data.frame(collect_nodes)
colnames(collect_nodes) <- c('country')
collect_nodes <- as.data.frame(collect_nodes)
colnames(collect_nodes) <- c('country')
merge(collect_nodes, ecbycountry, by.x="country", by.y="country", all.x=T)
merge(collect_nodes, ecbycountry, by.x="country", by.y="country", all.x=T)
collect_edges
which(collect_edges[,1] %in% "TW")
which(collect_edges[,1] %in% "NG")
which(collect_edges[,1] %in% "AE")
which(collect_edges[,1] %in% "HT")
collect_nodes
collect_nodes <- merge(collect_nodes, ecbycountry, by.x="country", by.y="country", all.x=T)
collect_nodes
which(collect_edges[,1] %in% "MT")
which(collect_edges[,1] %in% "EG")
